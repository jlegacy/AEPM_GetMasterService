//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BareService.GetMasterWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GetMasterWebService.IServices")]
    public interface IServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetMaster", ReplyAction="http://tempuri.org/IServices/GetMasterResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CrossPart))]
        BareService.GetMasterWebService.GetMasterResult GetMaster(string PartNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServices/GetMaster", ReplyAction="http://tempuri.org/IServices/GetMasterResponse")]
        System.IAsyncResult BeginGetMaster(string PartNumber, System.AsyncCallback callback, object asyncState);
        
        BareService.GetMasterWebService.GetMasterResult EndGetMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/AddMaster", ReplyAction="http://tempuri.org/IServices/AddMasterResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CrossPart))]
        BareService.GetMasterWebService.AddMasterResult AddMaster(string UserID, BareService.GetMasterWebService.CrossPart[] CrossPartList, bool Branded, string Commodity_Code, short Level, string Status, bool Returnable, string Tariff_Code, string AMSC, int Technical_Qty, int Service_Life, string Package_Code, string Information);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServices/AddMaster", ReplyAction="http://tempuri.org/IServices/AddMasterResponse")]
        System.IAsyncResult BeginAddMaster(string UserID, BareService.GetMasterWebService.CrossPart[] CrossPartList, bool Branded, string Commodity_Code, short Level, string Status, bool Returnable, string Tariff_Code, string AMSC, int Technical_Qty, int Service_Life, string Package_Code, string Information, System.AsyncCallback callback, object asyncState);
        
        BareService.GetMasterWebService.AddMasterResult EndAddMaster(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://tempuri.org/encoded")]
    public partial class GetMasterResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool brandedField;
        
        private string commodity_CodeField;
        
        private short levelField;
        
        private string statusField;
        
        private bool returnableField;
        
        private string tariff_CodeField;
        
        private string aMSCField;
        
        private int technical_QtyField;
        
        private int service_LifeField;
        
        private string package_CodeField;
        
        private string informationField;
        
        private string userIDField;
        
        private System.DateTime dateCreatedField;
        
        private CrossPart[] crossPartListField;
        
        private bool successField;
        
        private string errorField;
        
        /// <remarks/>
        public bool Branded {
            get {
                return this.brandedField;
            }
            set {
                this.brandedField = value;
                this.RaisePropertyChanged("Branded");
            }
        }
        
        /// <remarks/>
        public string Commodity_Code {
            get {
                return this.commodity_CodeField;
            }
            set {
                this.commodity_CodeField = value;
                this.RaisePropertyChanged("Commodity_Code");
            }
        }
        
        /// <remarks/>
        public short Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        public bool Returnable {
            get {
                return this.returnableField;
            }
            set {
                this.returnableField = value;
                this.RaisePropertyChanged("Returnable");
            }
        }
        
        /// <remarks/>
        public string Tariff_Code {
            get {
                return this.tariff_CodeField;
            }
            set {
                this.tariff_CodeField = value;
                this.RaisePropertyChanged("Tariff_Code");
            }
        }
        
        /// <remarks/>
        public string AMSC {
            get {
                return this.aMSCField;
            }
            set {
                this.aMSCField = value;
                this.RaisePropertyChanged("AMSC");
            }
        }
        
        /// <remarks/>
        public int Technical_Qty {
            get {
                return this.technical_QtyField;
            }
            set {
                this.technical_QtyField = value;
                this.RaisePropertyChanged("Technical_Qty");
            }
        }
        
        /// <remarks/>
        public int Service_Life {
            get {
                return this.service_LifeField;
            }
            set {
                this.service_LifeField = value;
                this.RaisePropertyChanged("Service_Life");
            }
        }
        
        /// <remarks/>
        public string Package_Code {
            get {
                return this.package_CodeField;
            }
            set {
                this.package_CodeField = value;
                this.RaisePropertyChanged("Package_Code");
            }
        }
        
        /// <remarks/>
        public string Information {
            get {
                return this.informationField;
            }
            set {
                this.informationField = value;
                this.RaisePropertyChanged("Information");
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
                this.RaisePropertyChanged("DateCreated");
            }
        }
        
        /// <remarks/>
        public CrossPart[] CrossPartList {
            get {
                return this.crossPartListField;
            }
            set {
                this.crossPartListField = value;
                this.RaisePropertyChanged("CrossPartList");
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://tempuri.org/encoded")]
    public partial class CrossPart : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string brandField;
        
        private string partNumberField;
        
        /// <remarks/>
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
                this.RaisePropertyChanged("Brand");
            }
        }
        
        /// <remarks/>
        public string PartNumber {
            get {
                return this.partNumberField;
            }
            set {
                this.partNumberField = value;
                this.RaisePropertyChanged("PartNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://tempuri.org/encoded")]
    public partial class AddMasterResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string errorField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicesChannel : BareService.GetMasterWebService.IServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BareService.GetMasterWebService.GetMasterResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BareService.GetMasterWebService.GetMasterResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BareService.GetMasterWebService.AddMasterResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BareService.GetMasterWebService.AddMasterResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicesClient : System.ServiceModel.ClientBase<BareService.GetMasterWebService.IServices>, BareService.GetMasterWebService.IServices {
        
        private BeginOperationDelegate onBeginGetMasterDelegate;
        
        private EndOperationDelegate onEndGetMasterDelegate;
        
        private System.Threading.SendOrPostCallback onGetMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddMasterDelegate;
        
        private EndOperationDelegate onEndAddMasterDelegate;
        
        private System.Threading.SendOrPostCallback onAddMasterCompletedDelegate;
        
        public ServicesClient() {
        }
        
        public ServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetMasterCompletedEventArgs> GetMasterCompleted;
        
        public event System.EventHandler<AddMasterCompletedEventArgs> AddMasterCompleted;
        
        public BareService.GetMasterWebService.GetMasterResult GetMaster(string PartNumber) {
            return base.Channel.GetMaster(PartNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMaster(string PartNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMaster(PartNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BareService.GetMasterWebService.GetMasterResult EndGetMaster(System.IAsyncResult result) {
            return base.Channel.EndGetMaster(result);
        }
        
        private System.IAsyncResult OnBeginGetMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PartNumber = ((string)(inValues[0]));
            return this.BeginGetMaster(PartNumber, callback, asyncState);
        }
        
        private object[] OnEndGetMaster(System.IAsyncResult result) {
            BareService.GetMasterWebService.GetMasterResult retVal = this.EndGetMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMasterCompleted(object state) {
            if ((this.GetMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMasterCompleted(this, new GetMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMasterAsync(string PartNumber) {
            this.GetMasterAsync(PartNumber, null);
        }
        
        public void GetMasterAsync(string PartNumber, object userState) {
            if ((this.onBeginGetMasterDelegate == null)) {
                this.onBeginGetMasterDelegate = new BeginOperationDelegate(this.OnBeginGetMaster);
            }
            if ((this.onEndGetMasterDelegate == null)) {
                this.onEndGetMasterDelegate = new EndOperationDelegate(this.OnEndGetMaster);
            }
            if ((this.onGetMasterCompletedDelegate == null)) {
                this.onGetMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMasterCompleted);
            }
            base.InvokeAsync(this.onBeginGetMasterDelegate, new object[] {
                        PartNumber}, this.onEndGetMasterDelegate, this.onGetMasterCompletedDelegate, userState);
        }
        
        public BareService.GetMasterWebService.AddMasterResult AddMaster(string UserID, BareService.GetMasterWebService.CrossPart[] CrossPartList, bool Branded, string Commodity_Code, short Level, string Status, bool Returnable, string Tariff_Code, string AMSC, int Technical_Qty, int Service_Life, string Package_Code, string Information) {
            return base.Channel.AddMaster(UserID, CrossPartList, Branded, Commodity_Code, Level, Status, Returnable, Tariff_Code, AMSC, Technical_Qty, Service_Life, Package_Code, Information);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddMaster(string UserID, BareService.GetMasterWebService.CrossPart[] CrossPartList, bool Branded, string Commodity_Code, short Level, string Status, bool Returnable, string Tariff_Code, string AMSC, int Technical_Qty, int Service_Life, string Package_Code, string Information, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddMaster(UserID, CrossPartList, Branded, Commodity_Code, Level, Status, Returnable, Tariff_Code, AMSC, Technical_Qty, Service_Life, Package_Code, Information, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BareService.GetMasterWebService.AddMasterResult EndAddMaster(System.IAsyncResult result) {
            return base.Channel.EndAddMaster(result);
        }
        
        private System.IAsyncResult OnBeginAddMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserID = ((string)(inValues[0]));
            BareService.GetMasterWebService.CrossPart[] CrossPartList = ((BareService.GetMasterWebService.CrossPart[])(inValues[1]));
            bool Branded = ((bool)(inValues[2]));
            string Commodity_Code = ((string)(inValues[3]));
            short Level = ((short)(inValues[4]));
            string Status = ((string)(inValues[5]));
            bool Returnable = ((bool)(inValues[6]));
            string Tariff_Code = ((string)(inValues[7]));
            string AMSC = ((string)(inValues[8]));
            int Technical_Qty = ((int)(inValues[9]));
            int Service_Life = ((int)(inValues[10]));
            string Package_Code = ((string)(inValues[11]));
            string Information = ((string)(inValues[12]));
            return this.BeginAddMaster(UserID, CrossPartList, Branded, Commodity_Code, Level, Status, Returnable, Tariff_Code, AMSC, Technical_Qty, Service_Life, Package_Code, Information, callback, asyncState);
        }
        
        private object[] OnEndAddMaster(System.IAsyncResult result) {
            BareService.GetMasterWebService.AddMasterResult retVal = this.EndAddMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddMasterCompleted(object state) {
            if ((this.AddMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddMasterCompleted(this, new AddMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddMasterAsync(string UserID, BareService.GetMasterWebService.CrossPart[] CrossPartList, bool Branded, string Commodity_Code, short Level, string Status, bool Returnable, string Tariff_Code, string AMSC, int Technical_Qty, int Service_Life, string Package_Code, string Information) {
            this.AddMasterAsync(UserID, CrossPartList, Branded, Commodity_Code, Level, Status, Returnable, Tariff_Code, AMSC, Technical_Qty, Service_Life, Package_Code, Information, null);
        }
        
        public void AddMasterAsync(string UserID, BareService.GetMasterWebService.CrossPart[] CrossPartList, bool Branded, string Commodity_Code, short Level, string Status, bool Returnable, string Tariff_Code, string AMSC, int Technical_Qty, int Service_Life, string Package_Code, string Information, object userState) {
            if ((this.onBeginAddMasterDelegate == null)) {
                this.onBeginAddMasterDelegate = new BeginOperationDelegate(this.OnBeginAddMaster);
            }
            if ((this.onEndAddMasterDelegate == null)) {
                this.onEndAddMasterDelegate = new EndOperationDelegate(this.OnEndAddMaster);
            }
            if ((this.onAddMasterCompletedDelegate == null)) {
                this.onAddMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddMasterCompleted);
            }
            base.InvokeAsync(this.onBeginAddMasterDelegate, new object[] {
                        UserID,
                        CrossPartList,
                        Branded,
                        Commodity_Code,
                        Level,
                        Status,
                        Returnable,
                        Tariff_Code,
                        AMSC,
                        Technical_Qty,
                        Service_Life,
                        Package_Code,
                        Information}, this.onEndAddMasterDelegate, this.onAddMasterCompletedDelegate, userState);
        }
    }
}
